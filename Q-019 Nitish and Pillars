Nitish and PillarsProblem Statement:
Nitish is a short hieghted person. He is standing facing N pillars of different heights with ith pillar having height hi. He tries to see all the possible pillars. He wants to know that how many buildings will he be able to see in the range [L, R] both inclusive

Input:
The first line contains an integer N denoting the number of pillars.
Next line contains N integers denoting height of ith pillar.
Next line contains a single integer Q.
Next Q lines contain pairs L and R respectively.

Output:
For every Q queries print the number of buildings visible in the range [L, R].

Constraints:
1<=N, Q<=105

1<=L<=R<=N

1<=h<=109

Time Limit:
1 sec

Example 1:
Input
7
5 2 3 7 9 8 11
4
0 6
1 5
2 6
3 4

Output
4
4
4

2

#CODE

 
#include<bits/stdc++.h>
    using namespace std;
    typedef long long ll;
    int main(){
        ios_base::sync_with_stdio(false);
        cin.tie(0);
        int n;
        cin>>n;
        int a[n],maR[n],next_max[n+1]={0};
    	stack<int> s;
    	int cnt=0;
        for(int i=0;i<n;i++){
            cin>>a[i];
    		while(!s.empty() && a[i]>a[s.top()]){
    			maR[s.top()]=i;
    			s.pop();
    		}
    		s.push(i);
        }
    	while(!s.empty()) {maR[s.top()]=n;s.pop();}
    	for(int i=n-1;i>=0;i--){
    		next_max[i]=(1+next_max[maR[i]]);
    	}
    	int q,l,r;
    	cin>>q;
    	while(q--){
    		cin>>l>>r;
    		int cnt=0,next=l;
    		while(next_max[next]!=0 && next<=r){
    			cnt++;
    			next=maR[next];
    		}
    		cout<<cnt<<"\n";
    	}
    	return 0;
    }
